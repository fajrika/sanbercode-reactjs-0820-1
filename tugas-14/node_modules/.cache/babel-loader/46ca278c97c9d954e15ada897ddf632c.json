{"ast":null,"code":"var _jsxFileName = \"/Users/fajrika/Google Drive/Sanbercode/React Basic/sanbercode-reactjs-0820-1/tugas-14/src/tugas 12/Timer.js\";\nimport React from \"react\";\nimport { unmountComponentAtNode, render } from \"react-dom\";\nimport Clock from \"./Clock\";\nimport \"./Timer.css\";\n\nclass Timer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      time: parseInt(props.time)\n    };\n  }\n\n  componentDidMount() {\n    this.timerID = setInterval(() => this.tick(), 1000);\n  }\n\n  componentDidUpdate() {\n    if (this.state.time === 0) {\n      clearInterval(this.timerID);\n      unmountComponentAtNode(document.getElementById(\"root\"));\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  tick() {\n    this.setState({\n      time: this.state.time - 1\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }\n    }, \"sekarang jam : \", /*#__PURE__*/React.createElement(Clock, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 28\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"f-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }\n    }, \"hitung mundur : \", this.state.time)));\n  }\n\n}\n\nexport default Timer;","map":{"version":3,"sources":["/Users/fajrika/Google Drive/Sanbercode/React Basic/sanbercode-reactjs-0820-1/tugas-14/src/tugas 12/Timer.js"],"names":["React","unmountComponentAtNode","render","Clock","Timer","Component","constructor","props","state","time","parseInt","componentDidMount","timerID","setInterval","tick","componentDidUpdate","clearInterval","document","getElementById","componentWillUnmount","setState"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,sBAAT,EAAiCC,MAAjC,QAA+C,WAA/C;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAO,aAAP;;AAEA,MAAMC,KAAN,SAAoBJ,KAAK,CAACK,SAA1B,CAAoC;AAClCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAEC,QAAQ,CAACH,KAAK,CAACE,IAAP;AADH,KAAb;AAGD;;AACDE,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,OAAL,GAAeC,WAAW,CAAC,MAAM,KAAKC,IAAL,EAAP,EAAoB,IAApB,CAA1B;AACD;;AACDC,EAAAA,kBAAkB,GAAG;AACnB,QAAI,KAAKP,KAAL,CAAWC,IAAX,KAAoB,CAAxB,EAA2B;AACzBO,MAAAA,aAAa,CAAC,KAAKJ,OAAN,CAAb;AACAX,MAAAA,sBAAsB,CAACgB,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAD,CAAtB;AACD;AACF;;AACDC,EAAAA,oBAAoB,GAAG;AACrBH,IAAAA,aAAa,CAAC,KAAKJ,OAAN,CAAb;AACD;;AACDE,EAAAA,IAAI,GAAG;AACL,SAAKM,QAAL,CAAc;AACZX,MAAAA,IAAI,EAAE,KAAKD,KAAL,CAAWC,IAAX,GAAkB;AADZ,KAAd;AAGD;;AACDP,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCACiB,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADjB,CADF,eAIE;AAAM,MAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAA2C,KAAKM,KAAL,CAAWC,IAAtD,CAJF,CADF,CADF;AAUD;;AAnCiC;;AAsCpC,eAAeL,KAAf","sourcesContent":["import React from \"react\";\nimport { unmountComponentAtNode, render } from \"react-dom\";\nimport Clock from \"./Clock\";\nimport \"./Timer.css\";\n\nclass Timer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      time: parseInt(props.time),\n    };\n  }\n  componentDidMount() {\n    this.timerID = setInterval(() => this.tick(), 1000);\n  }\n  componentDidUpdate() {\n    if (this.state.time === 0) {\n      clearInterval(this.timerID);\n      unmountComponentAtNode(document.getElementById(\"root\"));\n    }\n  }\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n  tick() {\n    this.setState({\n      time: this.state.time - 1,\n    });\n  }\n  render() {\n    return (\n      <div>\n        <h2>\n          <span>\n            sekarang jam : <Clock />\n          </span>\n          <span className=\"f-right\">hitung mundur : {this.state.time}</span>\n        </h2>\n      </div>\n    );\n  }\n}\n\nexport default Timer;\n"]},"metadata":{},"sourceType":"module"}